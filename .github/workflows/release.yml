name: Generate Release

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant: [ minApi16, minApi21 ]
    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'
      - run: chmod +x gradlew
      - name: Build ${{ matrix.variant }}-release
        id: build_release
        run: |
          echo "${{ secrets.ANDROID_SIGNATURE }}" > signature.jks.asc
          gpg -d --batch --passphrase ${{ secrets.ANDROID_SIGNATURE_PASS }} signature.jks.asc > signature.jks
          export signing_storeFile=$(pwd)/signature.jks
          export signing_storePassword=${{ secrets.ANDROID_SIGNATURE_STORE_PASS }}
          export signing_keyAlias=${{ secrets.ANDROID_SIGNATURE_KEY }}
          export signing_keyPassword=${{ secrets.ANDROID_SIGNATURE_KEY_PASS }}
          ./gradlew clean
          ./gradlew assemble${{ matrix.variant }}Release -x check
      - uses: actions/upload-artifact@v3
        with:
          name: RTCalculator-${{github.ref_name}}-${{ matrix.variant }}
          path: app/build/outputs/apk/${{ matrix.variant }}/release/*.apk
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - name: Extract changelog
        id: extract_changelog
        run: |
          changelog=$(sed -n "/^$GITHUB_REF_NAME$/,/^v/p" app/src/main/res/raw/changelog.txt | head -n -2)
          echo 'CHANGELOG<<EOF' >> $GITHUB_ENV
          echo "$changelog" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          body: | 
            ## Changelog 
            ### ${{ env.CHANGELOG }}
          artifacts: "*/*.apk"
